@using Application.Models.Chat
@using Application.Services.DataBaseServices
@using DataBase.Context
@using DataBase.CRUD.Repositories
@using DataBase.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.EntityFrameworkCore
@model Application.Models.Chat.SendMessageViewModel
@{
    Layout = null;

    UserService userService = new(new UserRepository());
    ChatDetailService chatDetailService = new(new ChatDetailRepository());
    MessageService messageService = new(new MessageRepository());

    var user = await userService.Get(int.Parse(TempData["UserId"].ToString()));
    TempData["UserId"] = user.Id;

    var chats = await chatDetailService.GetAllForUser(user.Id);
    ChatDetail? currentChat = TempData["ChatId"] != null ? await chatDetailService.Get(int.Parse(TempData["ChatId"].ToString())) : null;

    List<ContactViewModel> contacts = new();
    foreach (var chat in chats)
    {
        if (chat.Id == currentChat?.Id) continue;

        var contactUserId = chat.User_1Id == user.Id ? chat.User_2Id : chat.User_1Id;
        var contactUser = await userService.Get(contactUserId);
        contacts.Add(new(contactUser.Login, chat.Id));
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link rel="stylesheet" href="~/css/chat.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
<div class="container">
    <div class="sidebar">
        <div class="search-bar">
            <input type="text" placeholder="Search contacts">
        </div>
        <div class="contact-list">
            @foreach (var contact in contacts)
            {
                <a asp-controller="Chat" asp-action="Index" asp-route-id="@contact.ChatDetailId">
                    <div class="contact">@contact</div>
                </a>
            }
        </div>
        <form asp-controller="Chat" asp-action="AddChat" method="get" class="newChatButton">
            <button class="floating-button">+</button>
        </form>
    </div>
    <div class="chat">
        @if (currentChat != null)
        {
            TempData["ChatId"] = currentChat.Id;
            var messages = await messageService.GetByChatDetail(currentChat);
            var user1 = await userService.Get(currentChat.User_1Id);
            var user2 = await userService.Get(currentChat.User_2Id);

            <div class="chat-header">
                @((user1.Login == user.Login) ? user2.Login : user1.Login)
                <a asp-controller="Chat" asp-action="DeleteChat" asp-route-id="@currentChat.Id" class="delete-chat">
                    <i class="fas fa-trash-alt"></i>
                </a>
            </div>
            <div class="chat-window">
                @foreach (var item in messages)
                {
                    <div class="@(item.UserId == user.Id ? "message mine" : "message theirs")">
                        <div class="text">@item.MessageContent</div>
                        <div class="date">@item.MessageDate</div>
                    </div>
                }
            </div>
            <form asp-controller="Chat" asp-action="SendMessage" method="post" class="message-input">
                <input asp-for="Content" type="text" placeholder="Type a message">
                <button>Send</button>
            </form>
        }
    </div>
</div>

<script src="~/js/search.js"></script>
</body>
</html>